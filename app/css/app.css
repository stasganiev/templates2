@charset "UTF-8";

/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */

/* Document
   ========================================================================== */

/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */

html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */

/**
 * Remove the margin in all browsers.
 */

body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */

main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */

hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */

/**
 * Remove the gray background on active links in IE 10.
 */

a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */

abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */

b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */

/**
 * Remove the border on images inside links in IE 10.
 */

img {
  border-style: none;
}

/* Forms
   ========================================================================== */

/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */

button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */

button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */

button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */

button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */

button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */

fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */

legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */

progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */

textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */

[type=checkbox],
[type=radio] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */

[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */

[type=search] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */

[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */

/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */

details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */

summary {
  display: list-item;
}

/* Misc
   ========================================================================== */

/**
 * Add the correct display in IE 10+.
 */

template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */

[hidden] {
  display: none;
}

@font-face {
  font-family: "AmaticSC";
  src: url("../fonts/AmaticSC-Bold.eot");
  src: url("../fonts/AmaticSC-Bold.woff") format("woff"), url("../fonts/AmaticSC-Bold.ttf") format("truetype"), url("../fonts/AmaticSC-Bold.svg") format("svg");
  font-weight: bold;
  font-style: normal;
  font-display: swap;
  unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
  /*кирилица*/
  /*unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; /*латиница*/
}

@font-face {
  font-family: "Inter";
  src: url("../fonts/Inter-Regular.eot");
  src: url("../fonts/Inter-Regular.woff") format("woff"), url("../fonts/Inter-Regular.ttf") format("truetype"), url("../fonts/Inter-Regular.svg") format("svg");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
  unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
  /*кирилица*/
  /*unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; /*латиница*/
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  height: 100%;
}

body {
  display: flex;
  flex-direction: column;
  height: 100%;
  min-width: 320px;
  margin: 0;
  padding: 0;
  font-family: "Inter", "Candara", sans-serif;
  font-style: normal;
  font-size: 1rem;
  line-height: 1.25;
  font-weight: normal;
  text-transform: unset;
  color: #000;
  background-color: #ffffff;
}

main {
  flex-grow: 1;
}

img {
  display: inline-block;
  max-width: 100%;
  height: auto;
}

a {
  display: inline-block;
  text-decoration: none;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
  color: inherit;
}

.list-default {
  list-style: none;
}

.container {
  margin-right: auto;
  margin-left: auto;
}

.container-fluid {
  width: 100%;
}

.hidden {
  display: none;
}

.hidden__no {
  display: inline-block;
}

.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  border: 0;
  padding: 0;
  clip: rect(0 0 0 0);
  overflow: hidden;
  white-space: nowrap;
  -webkit-clip-path: inset(100%);
  clip-path: inset(100%);
}

.header {
  display: flex;
  flex-direction: column;
  align-content: center;
}

.navbar {
  display: flex;
  flex-direction: row;
  align-items: center;
  min-height: 75px;
}

.navbar-items {
  flex-grow: 1;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}

.navbar-item-link {
  padding: 10px 30px;
}

main,
header,
footer,
section,
article,
nav,
menu,
aside,
h1,
h2,
h3,
h4,
h5,
h6,
ul,
ol,
li,
table,
tr,
td,
div,
img,
a,
p,
span {
  position: relative;
}

main::before,
header::before,
footer::before,
section::before,
article::before,
nav::before,
menu::before,
aside::before,
h1::before,
h2::before,
h3::before,
h4::before,
h5::before,
h6::before,
ul::before,
ol::before,
li::before,
table::before,
tr::before,
td::before,
div::before,
img::before,
a::before,
p::before,
span::before {
  position: absolute;
  width: 30px;
  left: 0;
  top: 0;
  font-size: 8px;
  text-align: center;
  text-transform: lowercase;
  color: #000000;
  border-radius: 10px;
}

main,
header,
footer {
  background-color: rgba(221, 221, 221, 0.05);
  border: #dddddd 1px dashed;
}

main::before,
header::before,
footer::before {
  background-color: rgba(221, 221, 221, 0.5);
}

main::before {
  content: "main";
}

header::before {
  content: "hder";
}

footer::before {
  content: "foot";
}

section,
article,
nav,
menu,
aside {
  background-color: rgba(153, 153, 153, 0.05);
  border: #999999 1px dashed;
}

section::before,
article::before,
nav::before,
menu::before,
aside::before {
  background-color: rgba(153, 153, 153, 0.5);
}

section::before {
  content: "sect";
}

article::before {
  content: "artc";
}

nav::before {
  content: "nav";
}

menu::before {
  content: "menu";
}

aside::before {
  content: "asid";
}

h1,
h2,
h3,
h4,
h5,
h6 {
  background-color: rgba(221, 0, 0, 0.05);
  border: #dd0000 1px dashed;
}

h1::before,
h2::before,
h3::before,
h4::before,
h5::before,
h6::before {
  background-color: rgba(221, 0, 0, 0.5);
}

h1::before {
  content: "h1";
}

h2::before {
  content: "h2";
}

h3::before {
  content: "h3";
}

h4::before {
  content: "h4";
}

h5::before {
  content: "h5";
}

h6::before {
  content: "h6";
}

ul,
ol,
li,
table,
tr,
td {
  background-color: rgba(221, 85, 0, 0.05);
  border: #dd5500 1px dashed;
}

ul::before,
ol::before,
li::before,
table::before,
tr::before,
td::before {
  background-color: rgba(221, 85, 0, 0.5);
}

ul::before {
  content: "ul";
}

ol::before {
  content: "ol";
}

li::before {
  content: "li";
}

table::before {
  content: "tble";
}

tr::before {
  content: "tr";
}

td::before {
  content: "td";
}

div {
  background-color: rgba(221, 221, 0, 0.05);
  border: #dddd00 1px dashed;
}

div::before {
  background-color: rgba(221, 221, 0, 0.5);
  content: "div";
}

img {
  background-color: rgba(221, 0, 221, 0.05);
  border: #dd00dd 1px dashed;
}

img::before {
  background-color: rgba(221, 0, 221, 0.5);
  content: "img";
}

a,
p,
span {
  background-color: rgba(0, 221, 221, 0.05);
  border: #00dddd 1px dashed;
}

a::before,
p::before,
span::before {
  background-color: rgba(0, 221, 221, 0.5);
}

a::before {
  content: "a";
}

p::before {
  content: "p";
}

span::before {
  content: "span";
}

@media (min-width: 1024px) {
  .container2 {
    max-width: 764px;
  }

  .container3 {
    max-width: 764px;
  }

  .container-fluid2 {
    padding: 0 130px;
  }

  .container-fluid3 {
    padding: 0 130px;
  }

  .hidden_desktop {
    display: none;
  }
}

@media (max-width: 1023.9px) {
  .container2 {
    max-width: 280px;
  }

  .container3 {
    max-width: 280px;
  }

  .container-fluid2 {
    padding: 0 20px;
  }

  .container-fluid3 {
    padding: 0 20px;
  }

  .hidden_mobile {
    display: none;
  }
}

@media (min-width: 768px) and (max-width: 1279.9px) {
  .container3 {
    max-width: 708px;
  }

  .container-fluid3 {
    padding: 0 30px;
  }

  .hidden_tablet {
    display: none;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
